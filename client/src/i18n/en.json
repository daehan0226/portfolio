{
    "home": "Home",
    "about": "About",
    "company": "Work",
    "workExperience": "Work Experience in details",
    "project": "Projects",
    "skill": "Skill",
    "blog": "Blog",
    "homeTitle": "Daehan Lee",
    "homeSubTitle": "Independent Web Developer based in South Korea",
    "goToWebPage": "Check out the project",
    "langKr": "한국어",
    "langEn": "English",
    "About": "About Me",
    "AboutOne": "I started self-taught programming since 2019 March and I have worked for Acryl as an web developer for a year and 7 months untill 2021 February. As for now, I am working on personal projects.",
    "AboutTwo": "I had dealt with Flask, ReactJS, Crawler, Elasticsearch and MariaDB. I proccced withouth an issue even when I had to learn and use a complete new tool to me at Acryl.",
    "AboutThree": "After leaving Acryl, I have developed skills and imporved related to CI/CD, TEST, Readability of Codes, Configurations by working on personal projects.",
    "Project": "",
    "patentName": "Patent Search App API",
    "patentDesc": "Patent Search Service. search granted patents with search keyword advice",
    "patentBackFeatureOne": "Define multi containers(Express, MySQL, MongoDB, Reids and Nginx) with Docker Compose",
    "patentBackFeatureTwo": "NodeJs Express with TypeScript and Set env variables for production, development and test",
    "patentBackFeatureThree": "Continuous Integration - Github Actions and Jest",
    "patentBackFeatureFour": "Python Selenium Crawler - Collects Patent data and store",
    "patentBackFeatureFive": "EC2 - Configure Inbound rules: Open the port for Nginx as Proxy, limit IPs for remote acccess to DB",
    "portfolioName": "Portfolio - Front, Serverless backend",
    "portfolioDesc": "Portfolio Project",
    "portfolioFrontFeatureOne": "ReactJS - Typescript, ContextAPI - Language, Auth",
    "portfolioFrontFeatureTwo": "MUI - Component, Inline Styling, Color Theme, Responsive UI",
    "portfolioFrontFeatureThree": "Github Actions - Deploy to Github pages",
    "portfolioBackFeatureOne": "Firestore - store blog posts data and Timeline(create,update,delete with access rules for admin only)",
    "portfolioBackFeatureTwo": "AWS ECR - Docker Image of Python crawler script",
    "portfolioBackFeatureThree": "AWS Lambda with Event Trigger(CloudWatch Events)",
    "portfolioBackFeatureFour": "Github Actions - Push docker Image to AWS ECR and update Image URI of AWS Lambda function",
    "englihAppName": "Learn English App - Front, Back API",
    "englihAppDesc": "Search Phrasal verbs and Idioms, save them in my page to study later, play some games with them",
    "englihAppFrontFeatureOne": "NextJS, Redux(Auth state)",
    "englihAppFrontFeatureTwo": "MUI - Component, Styled-component,Responsive UI",
    "englihAppFrontFeatureThree": "Github Actions - Depoly build files to S3, connect to subdmain by Cafe24",
    "englihAppBackFeatureOne": "Python Flask API",
    "englihAppBackFeatureTwo": "Define multi containers(Flask, MySQL, Reids and Nginx) with Docker Compose",
    "englihAppBackFeatureThree": "MySQL- ORM, MongoDB - phrasal verbs, idioms, user like data, Redis - user session",
    "englihAppCrawlerFeatureOne": "Crawler with aiohttp - crawl phrasal verbs, idioms from English dictionary web sites",
    "furfellasAppName": "Furfellas App - Front, Back API",
    "furfellasAppDesc": "Fur fellas's webapge",
    "furfellasAppFrontFeatureOne": "ReactJS - Typescript, Redux(Auth state), Google Oauth2",
    "furfellasAppFrontFeatureTwo": "AntDesign - Component, Styled-component, Responsive UI",
    "furfellasAppBackFeatureOne": "Python Flask API",
    "furfellasAppBackFeatureTwo": "Define multi containers(Flask, MySQL - ORM, Reids, Nginx, Celery) with Docker Compose",
    "furfellasAppBackFeatureThree": "Test code with Pytest",
    "furfellasAppBackFeatureFour": "Google Oauth2 - Validate tokens for user login and sign up",
    "furfellasAppBackFeatureFive": "Python Celery - async job for uploading images to Google drive",
    "furfellasAppBackFeatureSix": "Database backup - Mysqldump, Mysqlrestore",
    "Blog": "",
    "blogInfo": "It might not be correct since blog posts data is updated once a day." 
}